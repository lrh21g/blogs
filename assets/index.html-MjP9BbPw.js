import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as o,o as l}from"./app-CwERxs91.js";const i="/blogs/assets/sql_row_column_based.drawio-DS77kGrV.png",n="/blogs/assets/oracle_sql_run.drawio-DJNWGgwr.png",r="/blogs/assets/Oracle_12c_database-rfKkJBRC.png",s="/blogs/assets/mysql_sql_run.drawio-Za3OViob.png",c="/blogs/assets/MySQL_database-BCBsYlA0.png",p={};function d(g,e){return l(),t("div",null,e[0]||(e[0]=[o('<h1 id="sql" tabindex="-1"><a class="header-anchor" href="#sql"><span>SQL</span></a></h1><h2 id="sql-相关知识" tabindex="-1"><a class="header-anchor" href="#sql-相关知识"><span>SQL 相关知识</span></a></h2><p>SQL 语言按照功能可划分为：</p><ul><li><code>DDL</code> （Data Definition Language，数据定义语言）：用于定义数据库对象，包括数据库、数据表和列。可创建、删除和修改数据库和表结构。</li><li><code>DML</code> （Data Manipulation Language，数据操作语言）：用于操作和数据库相关的记录，比如增加、删除、修改数据库表中的记录。</li><li><code>DCL</code> （Data Control Language，数据控制语言）：用于定义访问权限和安全级别。</li><li><code>DQL</code> （Data Query Language，数据查询语言）：用于查询记录。</li></ul><p><code>DB</code>、 <code>DBS</code> 、 <code>DBMS</code> 的区别：</p><ul><li><code>DB</code> （DataBase，数据库）：数据库是存储数据的集合。</li><li><code>DBS</code> （DataBase System，数据库系统）：包括了数据库、数据库管理系统以及数据库管理人员（DBA）。</li><li><code>DBMS</code> （DataBase Management System，数据库管理系统）：可对多个数据库进行管理，<code>DBMS = 多个数据库（DB） + 管理程序</code>。</li></ul><p>关系型数据库与非关系型数据：</p><ul><li>关系型数据库（RDBMS）：建立在关系模型基础上的数据库。</li><li>非关系型数据库（NoSQL）：包括键值型数据库、文档型数据库、搜索引擎和列存储等，还包括图形数据库。 <ul><li>键值型数据库：通过 <code>Key-Value</code> 键值的方式来存储数据。<code>Key</code> 作为唯一的标识符，优点是查找速度快，但是无法像关系型数据库一样使用条件过滤。键值型数据库典型的使用场景是作为内容缓存。Redis 是最流行的键值型数据库。</li><li>文档型数据库：用来管理文档，在数据库中文档作为处理信息的基本单位，一个文档就相当于一条记录，MongoDB 是最流行的文档型数据库。</li><li>搜索引擎：常见的全文搜索引擎有 Elasticsearch、Splunk 和 Solr。搜索引擎的优势在于采用了全文搜索的技术，核心原理是“倒排索引”。</li><li>列式数据库：将数据按照列存储到数据库中，可以大量降低系统的 I/O，适合于分布式文件系统，不足在于功能相对有限。</li><li>图形数据库：利用图这种数据结构存储实体（对象）之间的关系。数据模型主要是以节点和边（关系）来实现，特点在于能高效地解决复杂的关系问题。</li></ul></li></ul><p>注：</p><ul><li>列式数据库：将数据按照列进行存储，因为每列的数据格式是相同的，在存储过程时，可以使用有效的压缩算法进行压缩存储，在读取时，可以只读取需要的列到内存中，可以大量降低系统的 I/O。</li><li>行式数据库：将一行的数据都串起来进行存储，然后再存储下一行。在读取时，需要将整行数据读入内存中。Oracle、MySQL、SQL Server 等数据库都是采用的行式存储（Row-based）。</li></ul><p><img src="'+i+'" alt="sql_row_column_based"></p><h2 id="oracle中的sql如何执行" tabindex="-1"><a class="header-anchor" href="#oracle中的sql如何执行"><span>Oracle中的SQL如何执行</span></a></h2><p><img src="'+n+'" alt="oracle_sql_run"></p><p>共享池是 Oracle 中的术语，包括了库缓存，数据字典缓冲区等。</p><ul><li>库缓存区主要缓存 SQL 语句和执行计划。决定了 SQL 语句是否需要进行硬解析。</li><li>数据字典缓冲区存储的是 Oracle 中的对象定义，比如表、视图、索引等对象。当对 SQL 语句进行解析的时候，如果需要相关的数据，会从数据字典缓冲区中提取。</li></ul><p>为了提升 SQL 的执行效率，需要尽量避免硬解析，使用软解析，可以通过使用 <strong>绑定变量</strong>（在 SQL 语句中使用变量，通过不同的变量取值来改变 SQL 的执行结果）。可以提升软解析的可能性，不足之处在于可能会导致生成的执行计划不够优化，因此是否需要绑定变量还需要视情况而定。</p><p><img src="'+r+'" alt="Oracle_12c数据库架构"></p><h2 id="mysql中的sql如何执行" tabindex="-1"><a class="header-anchor" href="#mysql中的sql如何执行"><span>MySQL中的SQL如何执行</span></a></h2><p><img src="'+s+'" alt="mysql_sql_run"></p><p><img src="'+c+'" alt="MySQL数据库架构"></p>',20)]))}const L=a(p,[["render",d]]),h=JSON.parse('{"path":"/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E8%AF%AD%E8%A8%80/","title":"SQL","lang":"zh-CN","frontmatter":{"description":"SQL SQL 相关知识 SQL 语言按照功能可划分为： DDL （Data Definition Language，数据定义语言）：用于定义数据库对象，包括数据库、数据表和列。可创建、删除和修改数据库和表结构。 DML （Data Manipulation Language，数据操作语言）：用于操作和数据库相关的记录，比如增加、删除、修改数据库表中的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-28T08:18:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.LRH\\",\\"url\\":\\"https://lrh21g.github.io/blogs/\\"}]}"],["meta",{"property":"og:url","content":"https://lrh21g.github.io/blogs/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E8%AF%AD%E8%A8%80/"}],["meta",{"property":"og:site_name","content":"Mr.LRH 博客"}],["meta",{"property":"og:title","content":"SQL"}],["meta",{"property":"og:description","content":"SQL SQL 相关知识 SQL 语言按照功能可划分为： DDL （Data Definition Language，数据定义语言）：用于定义数据库对象，包括数据库、数据表和列。可创建、删除和修改数据库和表结构。 DML （Data Manipulation Language，数据操作语言）：用于操作和数据库相关的记录，比如增加、删除、修改数据库表中的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-28T08:18:46.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-28T08:18:46.000Z"}]]},"git":{"createdTime":1620210494000,"updatedTime":1740730726000,"contributors":[{"name":"lrh21g","username":"lrh21g","email":"837233792@qq.com","commits":2,"url":"https://github.com/lrh21g"},{"name":"lingronghai","username":"lingronghai","email":"lingronghai@foxmail.com","commits":1,"url":"https://github.com/lingronghai"},{"name":"lrh","username":"lrh","email":"lingronghai@foxmail.com","commits":1,"url":"https://github.com/lrh"}]},"readingTime":{"minutes":3.32,"words":997},"filePathRelative":"数据库/SQL语言/README.md","excerpt":"\\n<h2>SQL 相关知识</h2>\\n<p>SQL 语言按照功能可划分为：</p>\\n<ul>\\n<li><code>DDL</code> （Data Definition Language，数据定义语言）：用于定义数据库对象，包括数据库、数据表和列。可创建、删除和修改数据库和表结构。</li>\\n<li><code>DML</code> （Data Manipulation Language，数据操作语言）：用于操作和数据库相关的记录，比如增加、删除、修改数据库表中的记录。</li>\\n<li><code>DCL</code> （Data Control Language，数据控制语言）：用于定义访问权限和安全级别。</li>\\n<li><code>DQL</code> （Data Query Language，数据查询语言）：用于查询记录。</li>\\n</ul>","autoDesc":true}');export{L as comp,h as data};
