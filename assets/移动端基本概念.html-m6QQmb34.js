import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as s,o as a}from"./app-CwERxs91.js";const n="/blogs/assets/dpr.drawio-BbnRcrpn.png",l="/blogs/assets/dpr_ratio.drawio-Bl1VRGcq.png",o="/blogs/assets/layout_viewport.drawio-BDInrpzC.png",r="/blogs/assets/visual_viewport.drawio-DG4Y_c0C.png",d="/blogs/assets/ideal_viewport.drawio-CV2wjg_p.png",p={};function c(h,e){return a(),t("div",null,e[0]||(e[0]=[s(`<h1 id="移动端基本概念" tabindex="-1"><a class="header-anchor" href="#移动端基本概念"><span>移动端基本概念</span></a></h1><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><h3 id="css像素" tabindex="-1"><a class="header-anchor" href="#css像素"><span>CSS像素</span></a></h3><p>CSS 像素（CSS Pixel，简称 <code>px</code>）也称为 <strong>设备独立像素</strong> 、<strong>逻辑像素</strong> 。在 iOS 中称为 <strong>PT</strong> ，Android 中称之为 <strong>DIP</strong> 或 <strong>DP</strong> ，默认情况下在 PC 端等于一个<strong>物理像素</strong> 。</p><p>CSS像素与设备无关的像素（device-independent pixel， DIPs）。主要使用在浏览器上，用来精确度量 Web 页面上的内容。</p><p>一般情况下， CSS 像素（<code>px</code>）相对的是设备像素（Device Pixel， DP）。1 个 CSS 像素等于多少个设备像素取决于屏幕特性（是否是高清屏）和用户缩放的比例。</p><ul><li>当用户将屏幕从 100% 放大到 200% 时，1个 CSS 像素等于 2 个设备像素，反之相反；</li><li>当屏幕为 Retina 高清屏（如，iPhone6，dpr=2）时，1个 CSS 像素就等于 2 个设备像素，反之相反。</li></ul><p>需要明白一点的是，2 个设备像素并不是说它扩大了两倍，而是说在页面上仍然显示的是 1 px (1个 CSS像素)，但是这 1 px 是由 2 个设备像素组成。像素点变多了，因此图像会变得更加清晰。</p><p><code>页面的缩放系数 = CSS像素 / 设备独立像素</code></p><h3 id="设备像素-dp" tabindex="-1"><a class="header-anchor" href="#设备像素-dp"><span>设备像素（DP）</span></a></h3><p>设备像素（Device Pixels，简写 <code>DP</code>），又称 <strong>物理像素</strong> ，是设备能控制显示的最小单位，即屏幕上可以显示的最小颗粒，在同一设备上，它的物理像素是固定的。常说的 <code>1920 x 1080</code> 像素分辨率就是用的<strong>设备像素单位</strong> 。</p><p>平时所说的一倍屏、两倍屏和三倍屏，指的是设备以多少物理像素来显示一个 CSS 像素，所用的物理像素越多，一个 CSS 像素清晰度就越高。</p><p>在开发的过程中，可以使用下面的 API 来获取屏幕真实的物理像素：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">screen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">width</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  //获得屏幕水平方向上的像素数 </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">screen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">height</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //获得屏幕垂直方向上的像素数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分辨率" tabindex="-1"><a class="header-anchor" href="#分辨率"><span>分辨率</span></a></h3><ul><li><strong>显示分辨率</strong> 指的是屏幕图像的精密度，是指显示器所能显示的像素有多少。由于屏幕上的点、线和面都是由像素组成的，显示器可以显示的像素越多，画面就越精细，同样的屏幕区域内能显示的信息也就越多。通常用每行像素数目乘以每列像素数目来表示分辨率。</li><li><strong>图片分辨率</strong> 指的是单位英寸中所包含的像素点数，其定义更趋近于分辨率本身的定义。跟 PPI（像素密度）的含义是一样的，所以 PPI 是用来表示图片分辨率的单位，比如，<code>100ppi</code> 的图片分辨率，其意思是每英寸中有 <code>100</code> 个像素。图片分辨率也可以用 <code>水平像素数 x 垂直像素数</code> 来表达。</li></ul><p>屏幕分辨率：纵横向上的像素点数，单位是 <code>px</code>。以水平和垂直像素来衡量。</p><p>示例：</p><ul><li>当屏幕分辨率底时（例如 640x480），屏幕上显示像素少，单个像素尺寸比较大</li><li>当屏幕分辨率高时（例如 1600x1200），屏幕上显示像素多，单个像素尺寸比较小</li></ul><h3 id="分辨率比例-resolution-ratio" tabindex="-1"><a class="header-anchor" href="#分辨率比例-resolution-ratio"><span>分辨率比例（Resolution Ratio）</span></a></h3><p>分辨率比例（Resolution Ratio）分为屏幕分辨率比例和图像分辨率比例：</p><ul><li><strong>屏幕分辨率比例</strong> 是指屏幕的宽和高的像素比例；</li><li><strong>图片分辨率比例</strong> 是指图片的宽和高的像素比例。</li></ul><h3 id="屏幕尺寸" tabindex="-1"><a class="header-anchor" href="#屏幕尺寸"><span>屏幕尺寸</span></a></h3><p>屏幕尺寸以屏幕对角线的长度来计量，计量单位为英寸。</p><h3 id="设备独立像素-dip" tabindex="-1"><a class="header-anchor" href="#设备独立像素-dip"><span>设备独立像素（DIP）</span></a></h3><p>设备独立像素（Density Independent Pixel），简称 <strong>DIP</strong> ，也称 <strong>密度无关像素</strong> 。可以认为是计算机坐标系统中的一个点，这个点代表一个可以由程序使用的虚拟像素（比如 CSS 像素），然后由相关系统转换为物理像素。与物理像素有着一定的比例关系（即：设备像素比）。</p><p>理论上来讲，在低分辨率手机（例如：320x480）上相同大小的图片和文字，在高分辨率手机（例如：640x960）上会被缩放一倍，因为分辨率提高了一倍。然而，事实上，在使用不同分辨率的手机上，所展示的界面比例都是基本类似的，<code>RetinaDisplay</code>(视网膜屏幕) 正是解决了上面的问题。</p><p>在高分辨手机上，使用了视网膜屏幕的技术，显示效果示例为如下：假设列表的宽度为 300 像素：</p><ul><li>在同一水平线上，低分辨率手机会用 300 个物理像素渲染</li><li>在同一水平线上，高分辨率手机会用 600 个物理像素渲染</li></ul><p>在 Chrome 开发者工具中，模拟各个手机型号的显示情况，每种型号都会显示一个尺寸，比如 iPhone X 显示的尺寸是 375x812，实际 iPhone X 的分辨率会比这高很多，这里显示的就是设备独立像素。</p><h3 id="设备像素比-dpr-或-dppx" tabindex="-1"><a class="header-anchor" href="#设备像素比-dpr-或-dppx"><span>设备像素比（DPR 或 DPPX）</span></a></h3><p>设备像素比一般是指 <strong>DPR</strong> 或 <strong>DPPX</strong></p><ul><li>DPR 是 Device Pixel Ratio 简写，指的是每个 CSS 像素的设备像素；</li><li>DPPX 是 Dots Per Pixel 简写，指的是每个 CSS 像素的设备像素数量 。</li></ul><p>设备像素比表 一个 CSS 像素（宽度）等于几个物理像素（宽度）。</p><p><strong><code>设备像素比（DPR） = 物理像素 / 设备独立像素 = 屏幕物理像素数 / 设备独立像素数</code></strong> （注：物理像素数和逻辑像素数指的是同一方向的，比如水平方向（<code>x</code> 轴）或垂直方向（<code>y</code> 轴）。 ）</p><p>在 CSS 中可以通过 <code>@media</code> 的 <code>min-device-pixel-ratio</code> 来区分 <code>dpr</code> 。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-css"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@media</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (min-device-pixel-ratio:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /* CSS */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+n+'" alt="dpr"></p><p>无论 <code>dpr</code> 多大，<code>1px</code> 大小通常来说是一致的，也就是意味着，随着 <code>dpr</code> 的增大，物理像素会越来越小，才能容纳更多的物理像素，才能更高清，更 <code>retina</code></p><p><img src="'+l+'" alt="dpr_ratio"></p><h3 id="像素密度-ppi" tabindex="-1"><a class="header-anchor" href="#像素密度-ppi"><span>像素密度（PPI）</span></a></h3><p>像素密度（Pixels Per Inch，PPI）：每英寸包含的像素数，又叫像素数目。像素越多，代表画面越细腻越清晰。可以用于描述屏幕的清晰度以及一张图片的质量。</p><ul><li>描述图片时，<code>PPI</code> 越高，质量越高。</li><li>描述屏幕时，<code>PPI</code> 越高，屏幕越清晰。</li></ul><p>屏幕密度计算公式：根据【水平像素点 a 】和【垂直像素点 b 】计算对角线的像素点，除以【屏幕尺寸 c 】。</p><p>$$ PPI = \\frac{\\sqrt{a<sup>2+b</sup>2}}{c} $$</p><h3 id="dpi" tabindex="-1"><a class="header-anchor" href="#dpi"><span>DPI</span></a></h3><p>DPI 是指 Dots Per Inch，即每英寸点数，在点阵数码影像的每一英寸长度中，取样、可显示或输出点的数目。这里说的点，类似打印机的“墨点”，打印成像是由这些墨点成线，线成面这样组合而成。</p><p>DPI 是一个输出分辨率（打印分辨率），常用于描述打印机的打印精度，一般来说， DPI 值越高，表明打印机的打印精度越高。它表示每英寸所能打印的点数，即打印精度。</p><p>一般的激光打印机的输出分辨率是 <code>300dpi ~ 600dpi</code>，印刷的照排机达到 <code>1200dpi~2400dpi</code>，常见的冲印一般在 <code>150dpi ~ 300dpi</code> 之间。</p><p>图片的像素、打印分辨率和打印尺寸的关系： <code>图片的横向（或竖向）像素数 = 打印横向（或竖向）分辨率 x 打印的横向（或竖向）尺寸</code></p><p>例如：希望打印照片的尺寸是 <code>4 x 3inch</code>，而打印分辨率横向和竖向都是 <code>300dpi</code>，则需要照相机采集的像素数至少为 <code>(300 x 4) x (300 x 3)=1080000</code> 像素，约一百万像素。采集的像素数过低（采集图像机器的 PPI 决定）会降低图像的打印质量，过高也不能提升打印质量。</p><p>从技术角度说，“像素”只存在于电脑显示领域，而“点”只出现于打印或印刷领域。 DPR 和 PPI 相关，一般是：<code>DPR = PPI / 160</code>。</p><h2 id="视口-viewport" tabindex="-1"><a class="header-anchor" href="#视口-viewport"><span>视口（viewport）</span></a></h2><p>视口（<code>viewport</code>）代表当前可见的计算机图形区域。在 Web 浏览器术语中，通常与浏览器窗口相同，但不包括浏览器的 UI，菜单栏等（即指正在浏览的文档的那一部分）。</p><p>一般所说的视口共包括三种：布局视口、视觉视口和理想视口</p><h3 id="布局视口-layout-viewport" tabindex="-1"><a class="header-anchor" href="#布局视口-layout-viewport"><span>布局视口（layout viewport）</span></a></h3><p>布局视口是网页布局的基准窗口。可以通过调用 <code>document.documentElement.clientWidth/clientHeight</code> 来获取布局视口大小。</p><ul><li>PC 浏览器上，布局视口就等于当前浏览器的窗口大小（不包括 <code>borders</code> 、 <code>margins</code>、滚动条）。</li><li>移动端上，布局视口被赋予一个默认值，大部分为 980px ，保证 PC 端的网页可以在浏览器上呈现，但是非常小，用户可以手动对网页进行放大。</li></ul><p><img src="'+o+'" alt="layout_viewport"></p><h3 id="视觉视口-visual-viewport" tabindex="-1"><a class="header-anchor" href="#视觉视口-visual-viewport"><span>视觉视口（visual viewport）</span></a></h3><p>视觉视口是设备的可视区域-视觉视口（物理视口）。视觉视口默认等于当前浏览器的窗口大小（包括滚动条宽度）。可以通过调用 <code>window.innerWidth/innerHeight</code> 来获取视觉视口大小。</p><ul><li>布局视口会限制 CSS布局。</li><li>视觉视口决定用户具体能看到什么。</li></ul><p>当用户对浏览器进行缩放时，不会改变布局视口的大小，所以页面布局是不变的，但是缩放会改变视觉视口的大小。</p><ul><li><p>在 PC 端上，视觉视口等于布局视口的宽度，无论用户是放大屏幕还是缩小屏幕，这两个视口的宽度仍然相等。</p></li><li><p>在移动端上，缩放屏幕的过程实质上就是 CSS像素 缩放的过程。</p><p>当用户将屏幕放大到两倍时，视觉视口变小了（因为视觉视口中 CSS像素 变少了），而每单位的 CSS像素 却变大了，因此 1px （1 个 CSS像素）等于 2 个设备像素。当为 iPhone6(dpr=2) 时，视觉视口中 CSS 像素变少了，但是 1px 等于 2 个设备像素。当用户缩小屏幕时也是同样的道理。</p><p><strong>缩放的过程并不会影响布局视口的大小</strong>。也就是说：</p><ul><li>高清屏(dpr&gt;=2)或屏幕放大时，视觉视口变小(CSS像素变少)，每单位的 CSS像素 等于更多的设备像素；</li><li>非高清屏(dpr&lt;2)或屏幕缩小时，视觉视口变大(CSS像素变多)，每单位的 CSS像素 等于更少的设备像素。</li></ul></li></ul><p>例如：用户将浏览器窗口放大了 200%，浏览器窗口中的 CSS像素 会随着视觉视口的放大而放大，这时一个 CSS像素 会跨越更多的物理像素。</p><p><img src="'+r+'" alt="visual_viewport"></p><h3 id="理想视口-ideal-viewport" tabindex="-1"><a class="header-anchor" href="#理想视口-ideal-viewport"><span>理想视口（ideal viewport）</span></a></h3><p><strong>布局视口</strong>在移动端展示的效果并不是一个理想的效果，<strong>理想视口</strong>是网站页面在移动端展示的理想大小。可以通过调用 <code>screen.width/height</code> 来获取理想视口大小。</p><p>默认情况下，布局视口等于浏览器窗口宽度，因此在移动端上需要通过放大或缩小视觉视口来查看页面内容，这当然体验糟糕啊！因此，在移动端引入了理想视口的概念。理想视口的出现必须需要设置 <code>meta</code> 视口标签，此时布局视口等于理想视口的宽度。</p><p><code>页面的缩放系数 = CSS像素 / 设备独立像素</code>，实际上说 <code>页面的缩放系数 = 理想视口宽度 / 视觉视口宽度</code> 更为准确。</p><p>当页面缩放比例为 100% 时，<code>CSS像素 = 设备独立像素</code>，<code>理想视口 = 视觉视口</code>。</p><p>设备的逻辑像素宽度和物理像素宽度（像素分辨率）的关系满足如下公式：<strong><code>逻辑像素宽度 * 倍率 = 物理像素宽度</code></strong></p><ul><li>比如： MacBook Pro 的 Retina （视网膜）屏显示器硬件像素是：<code>2880 * 1800</code>。当你设置屏幕分辨率为 <code>1920 * 1200</code> 的时候，ideal viewport（理想视口）的宽度值是 1920 像素， 那么 dip 的宽度值就是 1920。设备像素比是 1.5（2880/1920）。</li><li>在移动端手机屏幕通常不可以设置分辨率，一般都是设备厂家默认设置的固定值，换句话说 dip 的值就是 ideal viewport（理想视口）（也就是分辨率）的值。</li></ul><p><img src="'+d+'" alt="ideal_viewport"></p><h3 id="viewport-属性" tabindex="-1"><a class="header-anchor" href="#viewport-属性"><span>viewport 属性</span></a></h3><p><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width; initial-scale=1; maximum-scale=1; minimum-scale=1; user-scalable=no;&quot;&gt;</code></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">含义</th><th style="text-align:left;">取值</th></tr></thead><tbody><tr><td style="text-align:left;">width</td><td style="text-align:left;">定义视口的宽度，单位为像素</td><td style="text-align:left;">正整数或设备宽度device-width</td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;">定义视口的高度，单位为像素</td><td style="text-align:left;">正整数或设备高度device-height</td></tr><tr><td style="text-align:left;">initial-scale</td><td style="text-align:left;">定义初始缩放值</td><td style="text-align:left;">整数或小数</td></tr><tr><td style="text-align:left;">minimum-scale</td><td style="text-align:left;">定义缩小最小比例，它必须小于或等于maximum-scale设置</td><td style="text-align:left;">整数或小数</td></tr><tr><td style="text-align:left;">maximum-scale</td><td style="text-align:left;">定义放大最大比例，它必须大于或等于minimum-scale设置</td><td style="text-align:left;">整数或小数</td></tr><tr><td style="text-align:left;">user-scalable</td><td style="text-align:left;">定义是否允许用户手动缩放页面，默认值yes</td><td style="text-align:left;">yes / no</td></tr></tbody></table><p>移动端视口要想视觉效果和体验好，视口宽度必须无限接近理想视口。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li><a href="https://mp.weixin.qq.com/s/b7co1Sdas6CE6g0Sgi5kNQ" target="_blank" rel="noopener noreferrer">关于移动端适配，你必须要知道的</a></li><li><a href="https://mp.weixin.qq.com/s/JJTa1DxYrn4gjA8Y0BuFAQ" target="_blank" rel="noopener noreferrer">一篇搞定移动端适配</a></li><li><a href="https://mp.weixin.qq.com/s/Q4YwNMZ09Klc2Vwxo0aOsg" target="_blank" rel="noopener noreferrer">浅析rem布局方案</a></li><li><a href="https://github.com/amfe/article/issues/17" target="_blank" rel="noopener noreferrer">使用Flexible实现手淘H5页面的终端适配</a></li></ul>',80)]))}const u=i(p,[["render",c]]),x=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/H5/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","title":"移动端基本概念","lang":"zh-CN","frontmatter":{"description":"移动端基本概念 基本概念 CSS像素 CSS 像素（CSS Pixel，简称 px）也称为 设备独立像素 、逻辑像素 。在 iOS 中称为 PT ，Android 中称之为 DIP 或 DP ，默认情况下在 PC 端等于一个物理像素 。 CSS像素与设备无关的像素（device-independent pixel， DIPs）。主要使用在浏览器上，用来...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"移动端基本概念\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-28T08:53:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.LRH\\",\\"url\\":\\"https://lrh21g.github.io/blogs/\\"}]}"],["meta",{"property":"og:url","content":"https://lrh21g.github.io/blogs/%E5%89%8D%E7%AB%AF/H5/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"Mr.LRH 博客"}],["meta",{"property":"og:title","content":"移动端基本概念"}],["meta",{"property":"og:description","content":"移动端基本概念 基本概念 CSS像素 CSS 像素（CSS Pixel，简称 px）也称为 设备独立像素 、逻辑像素 。在 iOS 中称为 PT ，Android 中称之为 DIP 或 DP ，默认情况下在 PC 端等于一个物理像素 。 CSS像素与设备无关的像素（device-independent pixel， DIPs）。主要使用在浏览器上，用来..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-28T08:53:37.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-28T08:53:37.000Z"}]]},"git":{"createdTime":1617474812000,"updatedTime":1745830417000,"contributors":[{"name":"lrh21g","username":"lrh21g","email":"837233792@qq.com","commits":4,"url":"https://github.com/lrh21g"},{"name":"lingronghai","username":"lingronghai","email":"lingronghai@foxmail.com","commits":2,"url":"https://github.com/lingronghai"},{"name":"lrh","username":"lrh","email":"lingronghai@foxmail.com","commits":1,"url":"https://github.com/lrh"}]},"readingTime":{"minutes":11.17,"words":3350},"filePathRelative":"前端/H5/移动端基本概念.md","excerpt":"\\n<h2>基本概念</h2>\\n<h3>CSS像素</h3>\\n<p>CSS 像素（CSS Pixel，简称 <code>px</code>）也称为 <strong>设备独立像素</strong> 、<strong>逻辑像素</strong> 。在 iOS 中称为 <strong>PT</strong> ，Android 中称之为 <strong>DIP</strong>  或 <strong>DP</strong> ，默认情况下在 PC 端等于一个<strong>物理像素</strong> 。</p>\\n<p>CSS像素与设备无关的像素（device-independent pixel， DIPs）。主要使用在浏览器上，用来精确度量 Web 页面上的内容。</p>","autoDesc":true}');export{u as comp,x as data};
