import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as a,o as c}from"./app-CwERxs91.js";const t={};function r(n,o){return c(),i("div",null,o[0]||(o[0]=[a('<h1 id="navigator-对象-screen-对象" tabindex="-1"><a class="header-anchor" href="#navigator-对象-screen-对象"><span>navigator 对象，screen 对象</span></a></h1><h2 id="navigator-对象" tabindex="-1"><a class="header-anchor" href="#navigator-对象"><span>navigator 对象</span></a></h2><p>Navigator 接口表示用户代理的状态和标识，包含浏览器和系统信息。它允许脚本查询它和注册自己进行一些活动。</p><h3 id="navigator-属性" tabindex="-1"><a class="header-anchor" href="#navigator-属性"><span>navigator 属性</span></a></h3><ul><li><code>navigator.permissions</code> ： 只读属性。返回一个权限对象，可用于查询和更新权限 API 所涵盖 API 的权限状态。</li><li><code>navigator.userAgent</code> ： 返回浏览器的 User Agent 字符串，表示用户设备信息，包含了浏览器的厂商、版本、操作系统等信息。</li><li><code>navigator.cookieEnabled</code> ： 只读属性。返回一个布尔值，来表示当前页面是否启用了 <code>cookie</code> 。</li><li><code>navigator.onLine</code> ： 返回浏览器的联机状态的布尔值，<code>true</code> 表示在线，<code>false</code> 表示离线。只要浏览器连接网络的能力发生变化，该属性就会发送更新。</li><li><code>navigator.language</code> ： 只读属性。返回一个表示用户偏好语言（通常是浏览器界面语言）的字符串。</li><li><code>navigator.languages</code> ： 只读属性。返回代表用户首选语言的字符串数组。</li><li><code>navigator.geolocation</code> ： 只读属性。返回一个 <code>Geolocation</code> 对象，通过这个对象可以访问到设备的位置信息。 <ul><li><code>navigator.geolocation.getCurrentPosition(success, error, options)</code> ： 确定设备的位置并返回一个携带位置信息的 Position 对象。</li><li><code>navigator.geolocation.watchPosition(success, error, options)</code> ： 注册监听器，在设备的地理位置发生改变的时候自动被调用。每当设备位置改变时，返回一个 long 类型的该监听器的 ID 值。</li><li><code>navigator.geolocation.clearWatch(id)</code> ： 注销使用 <code>geolocation.watchPosition()</code> 注册的位置监听器或错误监听器。</li></ul></li><li><code>navigator.clipboard</code> ： 返回一个可以读写剪切板内容的 <code>Clipboard</code> 对象。 <ul><li><code>navigator.clipboard.read()</code> ： 从剪贴板读取数据（比如图片），返回一个 <code>Promise</code> 对象。在检索到数据后，<code>Promise</code> 将兑现一个 <code>ClipboardItem</code> 对象的数组来提供剪切板数据。</li><li><code>navigator.clipboard.readText()</code> ： 从操作系统读取文本，返回一个 <code>Promise</code> 对象。在从剪切板中检索到文本后，<code>Promise</code> 将兑现一个包含剪切板文本数据的 DOMString。</li><li><code>navigator.clipboard.write()</code> ： 写入任意数据至操作系统剪贴板。异步操作，在操作完成后，返回的 <code>Promise</code> 的将被兑现。</li><li><code>navigator.clipboard.writeText()</code> ： 写入文本至操作系统剪贴板，返回一个 <code>Promise</code> 对象。在文本被完全写入剪切板后，返回的 <code>Promise</code> 将被兑现。</li></ul></li><li>.....</li></ul><h3 id="navigator-方法" tabindex="-1"><a class="header-anchor" href="#navigator-方法"><span>navigator 方法</span></a></h3><ul><li><code>navigator.clearAppBadge()</code> ：将当前应用程序图标上的徽章设置为 <code>nothing</code> 来清除该徽章。</li><li><code>navigator.getBattery()</code> ： 提供有关系统电池的信息。</li><li><code>navigator.getGamepads()</code> ： 返回一个游戏手柄对象数组，设备上连接的每个游戏手柄都有一个。</li><li>......</li></ul><h2 id="screen-对象" tabindex="-1"><a class="header-anchor" href="#screen-对象"><span>screen 对象</span></a></h2><p><code>screen</code> 对象表示一个屏幕窗口，往往指的是当前正在被渲染的 <code>window</code> 对象，可以使用 <code>window.screen</code> 获取它。</p><ul><li><code>screen.width</code> ： 浏览器窗口所在的屏幕的宽度（单位像素）。除非调整显示器的分辨率，否则这个值可以看作常量，不会发生变化。显示器的分辨率与浏览器设置无关，缩放网页并不会改变分辨率。</li><li><code>screen.height</code> ： 浏览器窗口所在的屏幕的高度（单位像素）。</li><li><code>screen.availWidth</code> ： 浏览器窗口可用的屏幕宽度（单位像素）。</li><li><code>screen.availHeight</code> ： 浏览器窗口可用的屏幕高度（单位像素）。部分空间可能不可用，比如系统的任务栏或者 Mac 系统屏幕底部的 Dock 区，该属性等于 height 减去那些被系统组件的高度。</li><li><code>screen.availTop</code> ： 返回浏览器可用空间上边距离屏幕（系统桌面）上边界的距离（单位像素）。</li><li><code>screen.availLeft</code> ： 返回浏览器可用空间左边距离屏幕（系统桌面）左边界的距离（单位像素）。</li><li><code>screen.orientation</code> ： 只读属性，返回屏幕当前的方向。</li><li><code>screen.pixelDepth</code> ： 返回屏幕的位深度/色彩深度（bit depth）。</li><li><code>screen.colorDepth</code> ： 返回屏幕的颜色深度（color depth）。</li></ul>',10)]))}const s=e(t,[["render",r]]),g=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/JavaScript/BOM/navigator.html","title":"navigator 对象，screen 对象","lang":"zh-CN","frontmatter":{"description":"navigator 对象，screen 对象 navigator 对象 Navigator 接口表示用户代理的状态和标识，包含浏览器和系统信息。它允许脚本查询它和注册自己进行一些活动。 navigator 属性 navigator.permissions ： 只读属性。返回一个权限对象，可用于查询和更新权限 API 所涵盖 API 的权限状态。 nav...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"navigator 对象，screen 对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-10T16:04:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.LRH\\",\\"url\\":\\"https://lrh21g.github.io/blogs/\\"}]}"],["meta",{"property":"og:url","content":"https://lrh21g.github.io/blogs/%E5%89%8D%E7%AB%AF/JavaScript/BOM/navigator.html"}],["meta",{"property":"og:site_name","content":"Mr.LRH 博客"}],["meta",{"property":"og:title","content":"navigator 对象，screen 对象"}],["meta",{"property":"og:description","content":"navigator 对象，screen 对象 navigator 对象 Navigator 接口表示用户代理的状态和标识，包含浏览器和系统信息。它允许脚本查询它和注册自己进行一些活动。 navigator 属性 navigator.permissions ： 只读属性。返回一个权限对象，可用于查询和更新权限 API 所涵盖 API 的权限状态。 nav..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-10T16:04:41.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-10T16:04:41.000Z"}]]},"git":{"createdTime":1698046341000,"updatedTime":1699632281000,"contributors":[{"name":"lrh21g","username":"lrh21g","email":"lingronghai@foxmail.com","commits":3,"url":"https://github.com/lrh21g"}]},"readingTime":{"minutes":3.17,"words":951},"filePathRelative":"前端/JavaScript/BOM/navigator.md","excerpt":"\\n<h2>navigator 对象</h2>\\n<p>Navigator 接口表示用户代理的状态和标识，包含浏览器和系统信息。它允许脚本查询它和注册自己进行一些活动。</p>\\n<h3>navigator 属性</h3>\\n<ul>\\n<li><code>navigator.permissions</code> ： 只读属性。返回一个权限对象，可用于查询和更新权限 API 所涵盖 API 的权限状态。</li>\\n<li><code>navigator.userAgent</code> ： 返回浏览器的 User Agent 字符串，表示用户设备信息，包含了浏览器的厂商、版本、操作系统等信息。</li>\\n<li><code>navigator.cookieEnabled</code> ： 只读属性。返回一个布尔值，来表示当前页面是否启用了 <code>cookie</code> 。</li>\\n<li><code>navigator.onLine</code> ： 返回浏览器的联机状态的布尔值，<code>true</code> 表示在线，<code>false</code> 表示离线。只要浏览器连接网络的能力发生变化，该属性就会发送更新。</li>\\n<li><code>navigator.language</code> ： 只读属性。返回一个表示用户偏好语言（通常是浏览器界面语言）的字符串。</li>\\n<li><code>navigator.languages</code> ： 只读属性。返回代表用户首选语言的字符串数组。</li>\\n<li><code>navigator.geolocation</code> ： 只读属性。返回一个 <code>Geolocation</code> 对象，通过这个对象可以访问到设备的位置信息。\\n<ul>\\n<li><code>navigator.geolocation.getCurrentPosition(success, error, options)</code> ： 确定设备的位置并返回一个携带位置信息的 Position 对象。</li>\\n<li><code>navigator.geolocation.watchPosition(success, error, options)</code> ： 注册监听器，在设备的地理位置发生改变的时候自动被调用。每当设备位置改变时，返回一个 long 类型的该监听器的 ID 值。</li>\\n<li><code>navigator.geolocation.clearWatch(id)</code> ： 注销使用 <code>geolocation.watchPosition()</code> 注册的位置监听器或错误监听器。</li>\\n</ul>\\n</li>\\n<li><code>navigator.clipboard</code> ： 返回一个可以读写剪切板内容的 <code>Clipboard</code> 对象。\\n<ul>\\n<li><code>navigator.clipboard.read()</code> ： 从剪贴板读取数据（比如图片），返回一个 <code>Promise</code> 对象。在检索到数据后，<code>Promise</code> 将兑现一个 <code>ClipboardItem</code> 对象的数组来提供剪切板数据。</li>\\n<li><code>navigator.clipboard.readText()</code> ： 从操作系统读取文本，返回一个 <code>Promise</code> 对象。在从剪切板中检索到文本后，<code>Promise</code> 将兑现一个包含剪切板文本数据的 DOMString。</li>\\n<li><code>navigator.clipboard.write()</code> ： 写入任意数据至操作系统剪贴板。异步操作，在操作完成后，返回的 <code>Promise</code> 的将被兑现。</li>\\n<li><code>navigator.clipboard.writeText()</code> ： 写入文本至操作系统剪贴板，返回一个 <code>Promise</code> 对象。在文本被完全写入剪切板后，返回的 <code>Promise</code> 将被兑现。</li>\\n</ul>\\n</li>\\n<li>.....</li>\\n</ul>","autoDesc":true}');export{s as comp,g as data};
