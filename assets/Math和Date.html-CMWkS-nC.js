import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as a,o as p}from"./app-CwERxs91.js";const c={};function d(i,e){return p(),o("div",null,e[0]||(e[0]=[a('<h1 id="math-和-date" tabindex="-1"><a class="header-anchor" href="#math-和-date"><span>Math 和 Date</span></a></h1><h2 id="math" tabindex="-1"><a class="header-anchor" href="#math"><span>Math</span></a></h2><p><code>Math</code> 是一个内置对象，它拥有一些数学常数属性和数学函数方法。<code>Math</code> 不是一个函数对象。<code>Math</code> 用于 <code>Number</code> 类型。它不支持 <code>BigInt</code>。</p><h3 id="math-的属性" tabindex="-1"><a class="header-anchor" href="#math-的属性"><span>Math 的属性</span></a></h3><ul><li><p><code>Math.E</code> ：欧拉常数，也是自然对数的底数，约等于 2.718。</p></li><li><p><code>Math.LN2</code> ：2 的自然对数，约等于 0.693。</p></li><li><p><code>Math.LN10</code> ：10 的自然对数，约等于 2.303。</p></li><li><p><code>Math.LOG2E</code> ：以 2 为底的 E 的对数，约等于 1.443。</p></li><li><p><code>Math.LOG10E</code> ：以 10 为底的 E 的对数，约等于 0.434。</p></li><li><p><code>Math.PI</code> ：圆周率，一个圆的周长和直径之比，约等于 3.14159。</p></li><li><p><code>Math.SQRT1_2</code> ：二分之一的平方根，同时也是 2 的平方根的倒数，约等于 0.707。</p></li><li><p><code>Math.SQRT2</code> ：2 的平方根，约等于 1.414</p></li></ul><h3 id="math-的方法" tabindex="-1"><a class="header-anchor" href="#math-的方法"><span>Math 的方法</span></a></h3><ul><li><p><code>Math.abs(x)</code> ：返回一个数的绝对值。</p></li><li><p><code>Math.max([x[, y[, …]]])</code> ：返回零到多个数值中最大值。</p></li><li><p><code>Math.min([x[, y[, …]]])</code> ：返回零到多个数值中最小值。</p></li><li><p><code>Math.random()</code> ：返回一个 0 到 1 之间的伪随机数。</p></li><li><p><code>Math.ceil(x)</code> ：返回大于一个数的最小整数，即一个数<strong>向上取整</strong>后的值。</p></li><li><p><code>Math.floor(x)</code> ：返回小于一个数的最大整数，即一个数<strong>向下取整</strong>后的值。</p></li><li><p><code>Math.round(x)</code> ：返回四舍五入后的整数。</p></li><li><p><code>Math.sign(x)</code> ：返回一个数的符号，得知一个数是正数、负数还是 0。</p></li><li><p><code>Math.trunc(x)</code> ：返回一个数的整数部分，直接去除其小数点及之后的部分。</p></li><li><p>方根运算</p><ul><li><p><code>Math.sqrt(x)</code> ：返回一个数的平方根。</p></li><li><p><code>Math.cbrt(x)</code> ：返回一个数的立方根。</p></li><li><p><code>Math.pow(x, y)</code> ：返回一个数的 y 次幂。</p></li><li><p><code>Math.hypot([x[, y[, …]]])</code> ：返回其所有参数平方和的平方根。</p></li><li><p><code>Math.exp(x)</code> ：返回欧拉常数的参数次方，<code>E^x</code>，其中 x 为参数，E 是欧拉常数（2.718...，自然对数的底数）。</p></li><li><p><code>Math.expm1(x)</code> ：返回 <code>exp(x) - 1</code> 的值。</p></li></ul></li><li><p>对数函数方法</p><ul><li><p><code>Math.log(x)</code> ：返回一个数的自然对数（㏒e，即 ㏑）。</p></li><li><p><code>Math.log1p(x)</code> ：返回一个数加 1 的和的自然对数（㏒e，即 ㏑）。</p></li><li><p><code>Math.log10(x)</code> ：返回一个数以 10 为底数的对数。</p></li><li><p><code>Math.log2(x)</code> ：返回一个数以 2 为底数的对数。</p></li></ul></li><li><p>三角函数方法</p><p>三角函数 <code>sin()</code>、<code>cos()</code>、<code>tan()</code>、<code>asin()</code>、<code>acos()</code>、<code>atan()</code> 和 <code>atan2()</code> 返回的值是弧度而非角度。若要转换，弧度除以 <code>(Math.PI / 180)</code> 即可转换为角度，同理，角度乘以这个数则能转换为弧度。</p><ul><li><p><code>Math.sin(x)</code> ：返回一个数的正弦值。</p></li><li><p><code>Math.cos(x)</code> ：返回一个数的余弦值。</p></li><li><p><code>Math.tan(x)</code> ：返回一个数的正切值。</p></li><li><p><code>Math.asin(x)</code> ：返回一个数的反正弦值。</p></li><li><p><code>Math.acos(x)</code> ：返回一个数的反余弦值。</p></li><li><p><code>Math.atan(x)</code> ：返回一个数的反正切值。</p></li><li><p><code>Math.sinh(x)</code> ：返回一个数的双曲正弦值。</p></li><li><p><code>Math.cosh(x)</code> ：返回一个数的双曲余弦值。</p></li><li><p><code>Math.tanh(x)</code> ：返回一个数的双曲正切值。</p></li><li><p><code>Math.asinh(x)</code> ：返回一个数的反双曲正弦值。</p></li><li><p><code>Math.acosh(x)</code> ：返回一个数的反双曲余弦值。</p></li><li><p><code>Math.atanh(x)</code> ：返回一个数的反双曲正切值。</p></li><li><p><code>Math.atan2(y, x)</code> ：返回 y/x 的反正切值。</p></li></ul></li><li><p>其他</p><ul><li><p><code>Math.clz32(x)</code> ：返回一个 32 位整数的前导零的数量。</p></li><li><p><code>Math.fround(x)</code> ：返回最接近一个数的单精度浮点型表示。</p></li><li><p><code>Math.imul(x, y)</code> ：返回 32 位整数乘法的结果。</p></li><li><p><code>Math.toSource()</code> ：返回字符串 &quot;Math&quot;。</p></li></ul></li></ul><h2 id="date" tabindex="-1"><a class="header-anchor" href="#date"><span>Date</span></a></h2><p>创建一个 JavaScript Date 实例，该实例呈现时间中的某个时刻。<code>Date</code> 对象则基于 Unix Time Stamp，<strong>即自 1970 年 1 月 1 日（UTC）起经过的毫秒数</strong>。</p><h3 id="new-date-构造函数" tabindex="-1"><a class="header-anchor" href="#new-date-构造函数"><span>new Date() 构造函数</span></a></h3><p>当一个参数被传递给 <code>Date()</code> 构造函数时，所有其他的值都被转换为原始值。如果结果是一个字符串，它将被解析为一个日期字符串。否则，产生的会被进一步强制转换为数值，并被视为时间戳。</p><ul><li><p><code>new Date()</code></p><p>如果没有提供参数，创建的 <code>Date</code> 对象表示实例化时刻的日期和时间。</p></li><li><p><code>new Date(value)</code></p><p><code>value</code> 是一个 Unix 时间戳（Unix Time Stamp），它是一个整数值，表示自 1970 年 1 月 1 日 00:00:00 UTC（the Unix epoch）以来的毫秒数，忽略了闰秒。</p></li><li><p><code>new Date(dateString)</code></p><p><code>dateString</code> 表示日期的字符串值。</p><p><code>dateString</code> 字符串应该能被 <code>Date.parse()</code> 正确方法识别，一定要确保输入符合 ISO 8601 格式（YYYY-MM-DDTHH:mm:ss.ssZ）。仅有日期的字符串（例如 &quot;1970-01-01&quot;）被视为 UTC，而日期时间的字符串（例如 &quot;1970-01-01T12:00&quot;）被视为本地时间。</p></li><li><p><code>new Date(dateObject)</code></p><p>一个现有的 <code>Date</code> 对象。实际上是在现有的 <code>Date</code> 对象上复制了一个相同的日期和时间。这等同于 <code>new Date(dateObject.valueOf())</code>，除了不调用 <code>valueOf()</code> 方法。</p></li><li><p><code>new Date(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]])</code> ：</p><ul><li><code>year</code> ：表示年的整数。从 0 到 99 的值映射了 1900 到 1999 年。其他值对应真实的年份。</li><li><code>monthIndex</code> ：表示月份的整数，从代表<strong>一月的 0 开始到代表十二月的 11 结束</strong>。</li><li><code>day</code> ：可选值。表示一个月中第几天的整数。默认为 1。</li><li><code>hours</code> ：可选值。表示一天中的小时数的整数值，在 0 到 23 之间。默认值为 0。</li><li><code>minutes</code> ：可选值。表示时间的分钟段的整数值。默认为小时后的 0 分钟。</li><li><code>seconds</code> ：可选值。表示时间的秒数段的整数值。默认为分钟后的 0 秒。</li><li><code>milliseconds</code> ：可选值。表示时间的毫秒段的整数值。默认为 0 毫秒的秒数。</li></ul><p>至少提供一个年份和月份，这种形式的 <code>Date()</code> 返回一个 <code>Date</code> 对象，其组成部分的值（年、月、日、小时、分钟、秒和毫秒）都来自提供的参数。任何缺失的字段都被赋予可能的最低值（day 为 1，其他所有组件为 0）。</p><p><strong>如果任何参数超过其定义的范围，会发生“进位”。</strong> 例如：</p><ul><li>如果传入一个大于 11 的 <code>monthIndex</code>，月将导致年的递增；例如：<code>new Date(1990, 12, 1)</code> 将返回 1991 年 1 月 1 日。</li><li>如果传入一个大于 59 的 <code>minutes</code>，<code>hours</code> 将相应递增，等等。例如：<code>new Date(2020, 5, 19, 25, 65)</code> 将返回 2020 年 6 月 20 日凌晨 2:05。</li></ul><p><strong>如果任何参数不足其定义的范围，会从高位“借位”。</strong> 例如：<code>new Date(2020, 5, 0)</code> 将返回 2020 年 5 月 31 日。</p></li></ul><h3 id="date-的属性和方法" tabindex="-1"><a class="header-anchor" href="#date-的属性和方法"><span>Date 的属性和方法</span></a></h3><ul><li><p><code>Date.prototype</code> ：允许为 <code>Date</code> 对象添加属性。</p></li><li><p><code>Date.length</code> ：<code>Date.length</code> 的值是 <code>7</code>。这是该构造函数可接受的参数个数。</p></li><li><p><code>Date.now()</code> ：返回自 1970-1-1 00:00:00 UTC（世界标准时间）至今所经过的毫秒数。</p></li><li><p><code>Date.parse()</code> ：解析一个表示日期的字符串，并返回从 1970-1-1 00:00:00 所经过的毫秒数。</p></li></ul><h3 id="date-实例方法" tabindex="-1"><a class="header-anchor" href="#date-实例方法"><span>Date 实例方法</span></a></h3><ul><li><p><code>Date.prototype.valueOf()</code> ：返回一个 Date 对象的原始值。覆盖了 Object.prototype.valueOf() 方法。</p></li><li><p>to 类的方法（格式化日期）</p><ul><li><p><code>Date.prototype.toString()</code> ：返回一个字符串，表示该 Date 对象。覆盖了 <code>Object.prototype.toString()</code> 方法。</p></li><li><p><code>Date.prototype.toDateString()</code> ：以美式英语和人类易读的表述形式返回一个 Date 对象<strong>日期部分</strong>的字符串。</p></li><li><p><code>Date.prototype.toTimeString()</code> ：以人类易读形式返回一个 Date 对象<strong>时间部分</strong>的字符串，该字符串以美式英语格式化。</p></li><li><p><code>Date.prototype.toLocaleString()</code> ：返回一个表述指定 Date 对象的字符串。该字符串格式因不同语言而不同。</p></li><li><p><code>Date.prototype.toLocaleDateString()</code> ：返回一个表述指定 Date 对象的<strong>日期部分</strong>字符串。该字符串格式因不同语言而不同。</p></li><li><p><code>Date.prototype.toLocaleTimeString()</code> ：返回一个表述指定 Date 对象<strong>时间部分</strong>的的字符串。该字符串格式因不同语言而不同。</p></li><li><p><code>Date.prototype.toJSON()</code> ：返回指定 Date 对象调用 <code>toISOString()</code> 方法的返回值。在 <code>JSON.stringify()</code> 中使用。</p></li><li><p><code>Date.prototype.toISOString()</code> ：将指定 Date 对象转换成 ISO 格式表述的字符串并返回。</p></li><li><p><code>Date.prototype.toUTCString()</code> ：使用 UTC 时区，把一个 Date 对象转换为一个字符串。</p></li></ul></li><li><p>get 类方法（访问日期）</p><ul><li><p><code>Date.prototype.getTime()</code> ：返回一个数值，表示从 1970 年 1 月 1 日 0 时 0 分 0 秒（UTC，即协调世界时）距离该 Date 对象所代表时间的毫秒数。（更早的时间会用负数表示）</p></li><li><p><code>Date.prototype.getFullYear()</code> ：根据本地时间，返回一个指定的 Date 对象的<strong>完整年份（四位数年份）</strong>。</p></li><li><p><code>Date.prototype.getMonth()</code> ：根据本地时间，返回一个指定的 Date 对象的<strong>月份（0–11）</strong>，0 表示一年中的第一月。</p></li><li><p><code>Date.prototype.getDate()</code> ：根据本地时间，返回一个指定的 Date 对象为<strong>一个月中的哪一日</strong>（1-31）。</p></li><li><p><code>Date.prototype.getHours()</code> ：根据本地时间，返回一个指定的 Date 对象的<strong>小时（0–23）</strong>。</p></li><li><p><code>Date.prototype.getMinutes()</code> ：根据本地时间，返回一个指定的 Date 对象的<strong>分钟数（0–59）</strong>。</p></li><li><p><code>Date.prototype.getSeconds()</code> ：根据本地时间，返回一个指定的 Date 对象的<strong>秒数（0–59）</strong>。</p></li><li><p><code>Date.prototype.getMilliseconds()</code> ：根据本地时间，返回一个指定的 Date 对象的<strong>毫秒数（0–999）</strong>。</p></li><li><p><code>Date.prototype.getDay()</code> ：根据本地时间，返回一个指定的 Date 对象是在一周中的第几天（0-6），0 表示星期天。</p></li><li><p><code>Date.prototype.getTimezoneOffset()</code> ：返回协调世界时（UTC）相对于当前时区的时间差值，单位为分钟。</p></li><li><p><code>Date.prototype.getUTCFullYear()</code> ：以协调世界时为标准，返回一个指定的 Date 对象的完整年份（四位数年份）。</p></li><li><p><code>Date.prototype.getUTCMonth()</code> ：以协调世界时为标准，返回一个指定的 Date 对象的月份（0–11），0 表示一年中的第一月。</p></li><li><p><code>Date.prototype.getUTCDate()</code> ：以协调世界时为标准，返回一个指定的 Date 对象为一个月中的哪一日（1-31）。</p></li><li><p><code>Date.prototype.getUTCHours()</code> ：以协调世界时为标准，返回一个指定的 Date 对象的小时（0–23）。</p></li><li><p><code>Date.prototype.getUTCMinutes()</code> ：以协调世界时为标准，返回一个指定的 Date 对象的分钟数（0–59）。</p></li><li><p><code>Date.prototype.getUTCSeconds()</code> ：以协调世界时为标准，返回一个指定的 Date 对象的秒数（0–59）。</p></li><li><p><code>Date.prototype.getUTCMilliseconds()</code> ：以协调世界时为标准，返回一个指定的 Date 对象的毫秒数（0–999）。</p></li><li><p><code>Date.prototype.getUTCDay()</code> ：以协调世界时为标准，返回一个指定的 Date 对象是在一周中的第几天（0-6），0 表示星期天。</p></li><li><p><code>Date.prototype.getYear()</code> ：根据本地时间，返回一个指定的 Date 对象的相对年份（相对 1900 年，通常是 2 到 3 位数字）。请改用 <code>getFullYear</code> 。</p></li></ul></li><li><p>set 类方法（设置日期）</p><ul><li><p><code>Date.prototype.setTime()</code> ：用一个从 1970-1-1 00:00:00 UTC 计时的毫秒数来为一个 Date 对象设置时间。用负数来设置更早的时间。</p></li><li><p><code>Date.prototype.setFullYear()</code> ：根据本地时间，设置一个 Date 对象的<strong>完整年份（四位数年份）</strong>。</p></li><li><p><code>Date.prototype.setMonth()</code> ：根据本地时间，设置一个 Date 对象的<strong>月份</strong>。</p></li><li><p><code>Date.prototype.setDate()</code> ：根据本地时间，设置一个 Date 对象在所属<strong>月份中的天数</strong>。</p></li><li><p><code>Date.prototype.setHours()</code> ：根据本地时间，设置一个 Date 对象的<strong>小时数</strong>。</p></li><li><p><code>Date.prototype.setMinutes()</code> ：根据本地时间，设置一个 Date 对象的<strong>分钟数</strong>。</p></li><li><p><code>Date.prototype.setSeconds()</code> ：根据本地时间，设置一个 Date 对象的<strong>秒数</strong>。</p></li><li><p><code>Date.prototype.setMilliseconds()</code> ：根据本地时间，设置一个 Date 对象的<strong>豪秒数</strong>。</p></li><li><p><code>Date.prototype.setUTCFullYear()</code> ：以协调世界时为标准，设置一个 Date 对象的完整年份（四位数年份）。</p></li><li><p><code>Date.prototype.setUTCMonth()</code> ：以协调世界时为标准，设置一个 Date 对象的月份。</p></li><li><p><code>Date.prototype.setUTCDate()</code> ：以协调世界时为标准，设置一个 Date 对象在所属月份中的天数。</p></li><li><p><code>Date.prototype.setUTCHours()</code> ：以协调世界时为标准，设置一个 Date 对象的小时数。</p></li><li><p><code>Date.prototype.setUTCMinutes()</code> ：以协调世界时为标准，设置一个 Date 对象的分钟数。</p></li><li><p><code>Date.prototype.setUTCSeconds()</code> ：以协调世界时为标准，设置一个 Date 对象的秒数。</p></li><li><p><code>Date.prototype.setUTCMilliseconds()</code> ：以协调世界时为标准，设置一个 Date 对象的豪秒数。</p></li><li><p><code>Date.prototype.setYear()</code> ：根据本地时间，设置一个 Date 对象的相对年份（相对 1900 年，通常是 2 到 3 位数字）。请改用 <code>setFullYear</code> 。</p></li></ul></li></ul>',16)]))}const r=t(c,[["render",d]]),h=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/JavaScript/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Math%E5%92%8CDate.html","title":"Math 和 Date","lang":"zh-CN","frontmatter":{"description":"Math 和 Date Math Math 是一个内置对象，它拥有一些数学常数属性和数学函数方法。Math 不是一个函数对象。Math 用于 Number 类型。它不支持 BigInt。 Math 的属性 Math.E ：欧拉常数，也是自然对数的底数，约等于 2.718。 Math.LN2 ：2 的自然对数，约等于 0.693。 Math.LN10 ：...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Math 和 Date\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-28T08:18:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.LRH\\",\\"url\\":\\"https://lrh21g.github.io/blogs/\\"}]}"],["meta",{"property":"og:url","content":"https://lrh21g.github.io/blogs/%E5%89%8D%E7%AB%AF/JavaScript/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Math%E5%92%8CDate.html"}],["meta",{"property":"og:site_name","content":"Mr.LRH 博客"}],["meta",{"property":"og:title","content":"Math 和 Date"}],["meta",{"property":"og:description","content":"Math 和 Date Math Math 是一个内置对象，它拥有一些数学常数属性和数学函数方法。Math 不是一个函数对象。Math 用于 Number 类型。它不支持 BigInt。 Math 的属性 Math.E ：欧拉常数，也是自然对数的底数，约等于 2.718。 Math.LN2 ：2 的自然对数，约等于 0.693。 Math.LN10 ：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-28T08:18:46.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-28T08:18:46.000Z"}]]},"git":{"createdTime":1694965948000,"updatedTime":1740730726000,"contributors":[{"name":"lrh21g","username":"lrh21g","email":"lingronghai@foxmail.com","commits":1,"url":"https://github.com/lrh21g"},{"name":"lrh","username":"lrh","email":"lingronghai@foxmail.com","commits":1,"url":"https://github.com/lrh"}]},"readingTime":{"minutes":9.55,"words":2866},"filePathRelative":"前端/JavaScript/基础知识/Math和Date.md","excerpt":"\\n<h2>Math</h2>\\n<p><code>Math</code> 是一个内置对象，它拥有一些数学常数属性和数学函数方法。<code>Math</code> 不是一个函数对象。<code>Math</code> 用于 <code>Number</code> 类型。它不支持 <code>BigInt</code>。</p>\\n<h3>Math 的属性</h3>\\n<ul>\\n<li>\\n<p><code>Math.E</code> ：欧拉常数，也是自然对数的底数，约等于 2.718。</p>\\n</li>\\n<li>\\n<p><code>Math.LN2</code> ：2 的自然对数，约等于 0.693。</p>\\n</li>\\n<li>\\n<p><code>Math.LN10</code> ：10 的自然对数，约等于 2.303。</p>\\n</li>\\n<li>\\n<p><code>Math.LOG2E</code> ：以 2 为底的 E 的对数，约等于 1.443。</p>\\n</li>\\n<li>\\n<p><code>Math.LOG10E</code> ：以 10 为底的 E 的对数，约等于 0.434。</p>\\n</li>\\n<li>\\n<p><code>Math.PI</code> ：圆周率，一个圆的周长和直径之比，约等于 3.14159。</p>\\n</li>\\n<li>\\n<p><code>Math.SQRT1_2</code> ：二分之一的平方根，同时也是 2 的平方根的倒数，约等于 0.707。</p>\\n</li>\\n<li>\\n<p><code>Math.SQRT2</code> ：2 的平方根，约等于 1.414</p>\\n</li>\\n</ul>","autoDesc":true}');export{r as comp,h as data};
