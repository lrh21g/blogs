
name: docs

on:
  # 每当 push 到 main 分支时触发部署
  push:
    branches: [main]

jobs:
  deploy-gh-pages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        # action 配置详见 https://github.com/actions/checkout
        uses: actions/checkout@v4
        with:
          # 如果本项目包含了子模块 (git submodules)，需要将此项设置为 true
          # submodules: true

          # 这是获取历史 commit 的深度，默认为 1，即只拉取最后一个 commit
          # 这样可以加快拉取速度
          #
          # 如果项目使用 VuePress，为了正确通过 Git 历史提交记录生成页面的最后更新时间
          # 需要设置为 0 以拉取完整的 git 历史提交
          fetch-depth: 0

          # 如果子模块包含私有仓库，需要设置 ssh key 或 token 以保证拥有拉取相应仓库的权限
          # 您可以将 ssh-key 设置为 github 绑定公钥对应的私钥
          # 也可以新建一个具有相关仓库访问权限的 github token
          # token:

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          # 选择要使用的 node 版本
          node-version: 18
          # 缓存 pnpm 依赖
          cache: pnpm

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      # 运行构建脚本
      - name: 构建 VuePress 站点
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: pnpm run docs:build 

      - name: 部署 GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          # 部署到 gh-pages 分支
          target_branch: gh-pages
          # 部署目录为 VuePress 的默认输出目录
          build_dir: src/.vuepress/dist
        env:
          # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
